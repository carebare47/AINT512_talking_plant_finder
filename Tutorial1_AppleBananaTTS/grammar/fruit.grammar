;
;  Sample GSL file for the FirstApp JSCapplication.
;
;  Examples of what you can say:
;  (Pausing between words is not necessary.)
;
;  apple
;
;  banana

.Start
(
	?HESITATION
	[
	(BINARY)
	]
)





.Speaked
(
	[
	;(?i ?want ?a ?plant ?that ?will ?grow ?well ?against ?by ?my ENV_SLOTS ?and ?in ?my ?ENV_SLOTS)
	(ENV_SLOTS ?and ?ENV_SLOTS ?and ?ENV_SLOTS ?and ?ENV_SLOTS ?and ?ENV_SLOTS)
	]
)


.Speak
(
	[
	;(?i ?want ?a ?plant ?that ?will ?grow ?well ?against ?by ?my ENV_SLOTS ?and ?in ?my ?ENV_SLOTS)
	(?INTRO ENV_SLOTS ?and ?INTRO ?ENV_SLOTS ?and ?INTRO ?ENV_SLOTS ?and ?INTRO ?ENV_SLOTS ?and ?ENV_SLOTS)
	]
)

INTRO
(
	[
	(?i ?want ?a ?plant ?that ?will ?grow ?well ?against ?by ?my ?and ?is ?a)
	]
)

.ErrorFixNumbers
(
	[
	(NUMBERS ?and ?NUMBERS ?and ?NUMBERS ?and ?NUMBERS ?and ?NUMBERS)
	]
)
NUMBERS
(
	[
		(one)		{<one_said 1>}
		(two)		{<two_said 1>}
		(three)		{<three_said 1>}
		(four)		{<four_said 1>}
		(five)		{<five_said 1>}
		(six)		{<six_said 1>}
		(seven)		{<seven_said 1>}
		(eight)		{<eight_said 1>}
		(nine)		{<nine_said 1>}
		(ten)		{<ten_said 1>}
		(eleven)	{<eleven_said 1>}
		(twelve)	{<twelve_said 1>}
		(thirteen)	{<thirteen_said 1>}
		(fourteen)	{<fourteen_said 1>}
		(fifteen)	{<fifteen_said 1>}
		(sixteen)	{<sixteen_said 1>}
		(seventeen)	{<seventeen_said 1>}
		(eighteen)	{<eighteen_said 1>}
		(nineteen)	{<nineteen_said 1>}
		(twenty)	{<twenty_said 1>}
		
				;plantlocation slots
		(canopy)          	 {<canopy_said 1>}
		(cultivated beds)          	 {<cultivatedbeds_said 1>}
		(dappled shade)          	 {<dappledshade_said 1>}
		(deep shade)          	 {<deepshade_said 1>}
		(east wall)          	 {<eastwall_said 1>}
		(ground cover)          	 {<groundcover_said 1>}
		(habitat)          	 {<habitat_said 1>}
		(hardiness)          	 {<hardyness_said 1>}
		(hedge)          	 {<hedge_said 1>}
		(hedgerow)          	 {<hedgerow_said 1>}
		(height)          	 {<height_said 1>}
		(lawn)          	 {<lawn_said 1>}
		(meadow)          	 {<meadow_said 1>}
		(north wall)          	 {<northwall_said 1>}
		(other habitats)          	 {<otherhabitats_said 1>}
		(pond)          	 {<pond_said 1>}
		(secondary)          	 {<secondary_said 1>}
		(shade)          	 {<shade_said 1>}
		(shady edge)          	 {<shadyedge_said 1>}
		(south wall)          	 {<southwall_said 1>}
		(sunny edge)          	 {<sunnyedge_said 1>}
		(walls)          	 {<walls_said 1>}
		(west wall)          	 {<westwall_said 1>}
		(width)          	 {<width_said 1>}
		(woodland garden)          	 {<woodlandgarden_said 1>}
		
		
		;Habit slots
		
		(shrub)  	 				{<shrub_said 1>}
		(annual)  	 				{<annual_said 1>}
		(perennial)  	 			{<perennial_said 1>}
		(tree)  	 				{<tree_said 1>}
		(perennial climber)  		{<perennial_climber_said 1>}
		(annual perennial)  		{<annual_slash_perennial_said 1>}
		(climber)  	 				{<climber_said 1>}
		(fern)  	 				{<fern_said 1>}
		(bulb)  	 				{<bulb_said 1>}
		(biennial)  	 			{<biennial_said 1>}
		(annual biennial)  			{<annual_slash_biennial_said 1>}
		(biennial perennial)  		{<biennial_slash_perennial_said 1>}
		(bamboo)  	 				{<bamboo_said 1>}
		(corm)  	 				{<corm_said 1>}
		(lichen)  	 				{<lichen_said 1>}
		(annual climber)  	 		{<annual_climber_said 1>}


	]
)
ENV_SLOTS
(
	[
		;plantlocation slots
		(canopy)          	 {<canopy_said 1>}
		(cultivated beds)          	 {<cultivatedbeds_said 1>}
		(dappled shade)          	 {<dappledshade_said 1>}
		(deep shade)          	 {<deepshade_said 1>}
		(east wall)          	 {<eastwall_said 1>}
		(ground cover)          	 {<groundcover_said 1>}
		(habitat)          	 {<habitat_said 1>}
		(hardiness)          	 {<hardyness_said 1>}
		(hedge)          	 {<hedge_said 1>}
		(hedgerow)          	 {<hedgerow_said 1>}
		(height)          	 {<height_said 1>}
		(lawn)          	 {<lawn_said 1>}
		(meadow)          	 {<meadow_said 1>}
		(north wall)          	 {<northwall_said 1>}
		(other habitats)          	 {<otherhabitats_said 1>}
		(pond)          	 {<pond_said 1>}
		(secondary)          	 {<secondary_said 1>}
		(shade)          	 {<shade_said 1>}
		(shady edge)          	 {<shadyedge_said 1>}
		(south wall)          	 {<southwall_said 1>}
		(sunny edge)          	 {<sunnyedge_said 1>}
		(walls)          	 {<walls_said 1>}
		(west wall)          	 {<westwall_said 1>}
		(width)          	 {<width_said 1>}
		(woodland garden)          	 {<woodlandgarden_said 1>}
		
		
		;Habit slots
		
		(shrub)  	 				{<shrub_said 1>}
		(annual)  	 				{<annual_said 1>}
		(perennial)  	 			{<perennial_said 1>}
		(tree)  	 				{<tree_said 1>}
		(perennial climber)  		{<perennial_climber_said 1>}
		(annual perennial)  		{<annual_slash_perennial_said 1>}
		(climber)  	 				{<climber_said 1>}
		(fern)  	 				{<fern_said 1>}
		(bulb)  	 				{<bulb_said 1>}
		(biennial)  	 			{<biennial_said 1>}
		(annual biennial)  			{<annual_slash_biennial_said 1>}
		(biennial perennial)  		{<biennial_slash_perennial_said 1>}
		(bamboo)  	 				{<bamboo_said 1>}
		(corm)  	 				{<corm_said 1>}
		(lichen)  	 				{<lichen_said 1>}
		(annual climber)  	 		{<annual_climber_said 1>}

	]
)


WALL
(
	[
		(west wall)	{<env_catagory_said westwall_said>}
		(east wall)	{<env_catagory_said eastwall_said>}
		(north wall)	{<env_catagory_said northwall_said>}
		(south wall)	{<env_catagory_said southwall_said>}
	]
)

;temperatues
;time of year to plant
;time of year to flower
;tree? shrub? bulb?
;how long it takes to grow (or fast/slow grower)
;height of plant
;thirsty?
;level of maintanence
;hardyness
;direct sunlight

;grow well with other plants (I dont' have that info)
;
;
.SearchType
(
	[
	(medicinal)		{<search_type_said medicinal_said>}
	(medical)		{<search_type_said medicinal_said>}
	(health)		{<search_type_said medicinal_said>}
	(environment)		{<search_type_said environment_said>}
	(environmental)		{<search_type_said environment_said>}
	(edible ?plant)			{<search_type_said edible_said>}
	(edible ?plants)			{<search_type_said edible_said>}
	(food)			{<search_type_said edible_said>}
	]
)

.ZeroMatches
(
	[
	(MATCHES)
	]
)

;Would you like to remove the last term, start searching again by environment, or start searching again via a different category?
MATCHES
(
	[
		(remove ?the last item) {<env_zero_match_response_said remove_last_said>}
		(restart environment ?search) {<env_zero_match_response_said restart_env_said>}
		(start searching by environment again) {<env_zero_match_response_said restart_env_said>}
		(start searching ?again by environment) {<env_zero_match_response_said restart_env_said>}
		(search ?by environment ?again) {<env_zero_match_response_said restart_env_said>}
		(search ?by environment) {<env_zero_match_response_said restart_env_said>}
		(restart search ?by environment) {<env_zero_match_response_said restart_env_said>}
	]
)
.Environmental_search
(
	[
	
	]
)

.Locale
(
	?HESITATION	
		[
			(africa)	{<locale_said africa_said>}
			(australasia)	{<locale_said australasia_said>}
			(britain)	{<locale_said britain_said>}
			(east esia)	{<locale_said east_asia_said>}
			(europe)	{<locale_said europe_said>}
			(mediterranean)	{<locale_said mediterranean_said>}
			(north america)	{<locale_said north_america_said>}
			(other)	{<locale_said other_said>}
			(south america)	{<locale_said south_america_said>}
			(west asia)	{<locale_said west_asia_said>}
		]
	?please
)

.Environment
(
	[
	(ENV_CATAGORY)
	]
)

ENV_CATAGORY
(
	[
		(canopy)	{<env_catagory_said canopy_said>}
		(common name)	{<env_catagory_said common_name_said>}
		(cultivar)	{<env_catagory_said cultivar_said>}
		(cultivated beds)	{<env_catagory_said cultivatedbeds_said>}
		(dappled shade)	{<env_catagory_said dappledshade_said>}
		(deep shade)	{<env_catagory_said deepshade_said>}
		(east wall)	{<env_catagory_said eastwall_said>}
		(ground cover)	{<env_catagory_said groundcover_said>}
		(habit)	{<env_catagory_said habit_said>}
		(habitat)	{<env_catagory_said habitat_said>}
		(hardiness)	{<env_catagory_said hardyness_said>}
		(hedge)	{<env_catagory_said hedge_said>}
		(hedgerow)	{<env_catagory_said hedgerow_said>}
		(height)	{<env_catagory_said height_said>}
		(latin name)	{<env_catagory_said latin_name_said>}
		(lawn)	{<env_catagory_said lawn_said>}
		(meadow)	{<env_catagory_said meadow_said>}
		(north wall)	{<env_catagory_said northwall_said>}
		(other habitats)	{<env_catagory_said otherhabitats_said>}
		(pond)	{<env_catagory_said pond_said>}
		(secondary)	{<env_catagory_said secondary_said>}
		(shade)	{<env_catagory_said shade_said>}
		(shady edge)	{<env_catagory_said shadyedge_said>}
		(south wall)	{<env_catagory_said southwall_said>}
		(sunny edge)	{<env_catagory_said sunnyedge_said>}
		(walls)	{<env_catagory_said walls_said>}
		(west wall)	{<env_catagory_said westwall_said>}
		(width)	{<env_catagory_said width_said>}
		(woodland garden)	{<env_catagory_said woodlandgarden_said>}
	]
)


BINARY
(
	[
	(yes)					{<binary_response_said yes_said>}
	(affirmative)			{<binary_response_said yes_said>}
	(?yes i have ?indeed)	{<binary_response_said yes_said>}
	(no)					{<binary_response_said no_said>}
	(negative)				{<binary_response_said no_said>}
	(?no i have not)		{<binary_response_said no_said>}
	]
)

.Greet	
(
		[
			(apple)       {<fruit_said apple_said>}
			(egg)       {<fruit_said egg_said>}
			(food)       {<fruit_said food_said>}
			(banana)      {<fruit_said banana_said>}
			(medicine)		{<fruit_said medicine_said>}
			(exit)        {<fruit_said exit_said>}
		]
)

;.Greet	;This should be the three way switcher, edible medical or environment
;(
;		[
;			(apple)       {<fruit_said apple_said>}
;			(egg)       {<fruit_said egg_said>}
;			(food)       {<fruit_said food_said>}
;			(banana)      {<fruit_said banana_said>}
;			(medicine)		{<fruit_said medicine_said>}
;			(exit)        {<fruit_said exit_said>}
;		]
;);;

.Choice (
			?HESITATION
				[
				(?WILL_YOU) 
				
				(?CAN_YOU)
				]
				
				

			  ?PRE_OBJECT OBJECT ?THAT ?CAN ?CURE CONDITION ?please
		)
		
		
CURE
(
	[
		(cure ?my)
		(help ?with ?my)
		(help (?me with my))
		(help (?me with a))
	]
)
CONDITION
(
	[
		(headache) {<condition_said headache_said>}
		(cold) {<condition_said cold_said>}
		(?i ?need ?a ?massive shit) {<condition_said constipated_said>}
	]
)
THAT
(
	[
	(which)
	(that)
	]
)

CAN
(
	[
	(can)
	(could)
	(will)
	]
)

PRE_OBJECT
(
	[
	(a)
	(the)
	]
)

OBJECT
(
	[
	(plant)
	(tree)
	(shrub)
	(flower)
	]
)
HESITATION
(
  [
	(uh)
	(and)
	(so)
  ]
)

CAN_YOU
(
	[
	(can you help ?me ?find)
	;(can I get a)
	]
)

WILL_YOU
(
	[
	(will you help ?me)
	]
)

FIND
(
	[
	(hand with finding)
	(find a plant that can)
	(find ?me ?a)
	]
)

I_WANT
( 
  [
	(i would like to)
	(i want ?to)
	(can i)
	(could i)
	(find me a plant that)
	(can i please)
	(i will)
	(i)
  ]
)


VERB
(
  [
	(order)
	(get)
	(take)
	(have)
  ]
)




DRUG_CLASS
(
	[
		(abortifacient)		{<drugclass_said abortifacient_said>}
		(acrid)		{<drugclass_said acrid_said>}
		;(adaptogen)		{<drugclass_said adaptogen_said>}
		;(alterative)		{<drugclass_said alterative_said>}
		;(anaesthetic)		{<drugclass_said anaesthetic_said>}
		(analgesic)		{<drugclass_said analgesic_said>}
		(anaphrodisiac)		{<drugclass_said anaphrodisiac_said>}
		(anodyne)		{<drugclass_said anodyne_said>}
		(antacid)		{<drugclass_said antacid_said>}
		(anthelmintic)		{<drugclass_said anthelmintic_said>}
		;(antiaphonic)		{<drugclass_said antiaphonic_said>}
		;(antiarthritic)		{<drugclass_said antiarthritic_said>}
		;(antiasthmatic)		{<drugclass_said antiasthmatic_said>}
		(antibacterial)		{<drugclass_said antibacterial_said>}
		;(antibilious)		{<drugclass_said antibilious_said>}
		(antibiotic)		{<drugclass_said antibiotic_said>}
		;(anticholesterolemic)		{<drugclass_said anticholesterolemic_said>}
		;(anticoagulant)		{<drugclass_said anticoagulant_said>}
		;(antidandruff)		{<drugclass_said antidandruff_said>}
		;(antidermatosic)		{<drugclass_said antidermatosic_said>}
		(antidote)		{<drugclass_said antidote_said>}
		;(antiecchymotic)		{<drugclass_said antiecchymotic_said>}
		;(antiemetic)		{<drugclass_said antiemetic_said>}
		(antifungal)		{<drugclass_said antifungal_said>}
		;(antihaemorrhoidal)		{<drugclass_said antihaemorrhoidal_said>}
		;(antihalitosis)		{<drugclass_said antihalitosis_said>}
		;(antihydrotic)		{<drugclass_said antihydrotic_said>}
		;(antiinflammatory)		{<drugclass_said antiinflammatory_said>}
		;(antiperiodic)		{<drugclass_said antiperiodic_said>}
		;(antiphlogistic)		{<drugclass_said antiphlogistic_said>}
		;(antipruritic)		{<drugclass_said antipruritic_said>}
		;(antipyretic)		{<drugclass_said antipyretic_said>}
		;(antirheumatic)		{<drugclass_said antirheumatic_said>}
		;(antiscorbutic)		{<drugclass_said antiscorbutic_said>}
		;(antiscrophulatic)		{<drugclass_said antiscrophulatic_said>}
		(antiseptic)		{<drugclass_said antiseptic_said>}
		;(antispasmodic)		{<drugclass_said antispasmodic_said>}
		;(antitumor)		{<drugclass_said antitumor_said>}
		;(antitussive)		{<drugclass_said antitussive_said>}
		;(antivinous)		{<drugclass_said antivinous_said>}
		(antiviral)		{<drugclass_said antiviral_said>}
		(aperient)		{<drugclass_said aperient_said>}
		(aphrodisiac)		{<drugclass_said aphrodisiac_said>}
		(appetizer)		{<drugclass_said appetizer_said>}
		(aromatherapy)		{<drugclass_said aromatherapy_said>}
		(aromatic)		{<drugclass_said aromatic_said>}
		(astringent)		{<drugclass_said astringent_said>}
		(bach)		{<drugclass_said bach_said>}
		(balsamic)		{<drugclass_said balsamic_said>}
		(cancer)		{<drugclass_said cancer_said>}
		(cardiac)		{<drugclass_said cardiac_said>}
		;(cardiotonic)		{<drugclass_said cardiotonic_said>}
		(carminative)		{<drugclass_said carminative_said>}
		(cathartic)		{<drugclass_said cathartic_said>}
		;(cholagogue)		{<drugclass_said cholagogue_said>}
		(contraceptive)		{<drugclass_said contraceptive_said>}
		(cytostatic)		{<drugclass_said cytostatic_said>}
		(cytotoxic)		{<drugclass_said cytotoxic_said>}
		(decongestant)		{<drugclass_said decongestant_said>}
		(demulcent)		{<drugclass_said demulcent_said>}
		;(deobstruent)		{<drugclass_said deobstruent_said>}
		(deodorant)		{<drugclass_said deodorant_said>}
		;(depurative)		{<drugclass_said depurative_said>}
		(detergent)		{<drugclass_said detergent_said>}
		;(diaphoretic)		{<drugclass_said diaphoretic_said>}
		(digestive)		{<drugclass_said digestive_said>}
		(disinfectant)		{<drugclass_said disinfectant_said>}
		(diuretic)		{<drugclass_said diuretic_said>}
		(emetic)		{<drugclass_said emetic_said>}
		(emmenagogue)		{<drugclass_said emmenagogue_said>}
		(emollient)		{<drugclass_said emollient_said>}
		(enuresis)		{<drugclass_said enuresis_said>}
		;(errhine)		{<drugclass_said errhine_said>}
		(expectorant)		{<drugclass_said expectorant_said>}
		(febrifuge)		{<drugclass_said febrifuge_said>}
		;(galactofuge)		{<drugclass_said galactofuge_said>}
		;(galactogogue)		{<drugclass_said galactogogue_said>}
		;(haemolytic)		{<drugclass_said haemolytic_said>}
		;(haemostatic)		{<drugclass_said haemostatic_said>}
		(hallucinogenic)		{<drugclass_said hallucinogenic_said>}
		(hepatic)		{<drugclass_said hepatic_said>}
		(homeopathy)		{<drugclass_said homeopathy_said>}
		;(hydrogogue)		{<drugclass_said hydrogogue_said>}
		(hypnotic)		{<drugclass_said hypnotic_said>}
		;(hypoglycaemic)		{<drugclass_said hypoglycaemic_said>}
		(hypotensive)		{<drugclass_said hypotensive_said>}
		(infertility)		{<drugclass_said infertility_said>}
		(irritant)		{<drugclass_said irritant_said>}
		(kidney)		{<drugclass_said kidney_said>}
		(laxative)		{<drugclass_said laxative_said>}
		(lenitive)		{<drugclass_said lenitive_said>}
		;(lithontripic)		{<drugclass_said lithontripic_said>}
		(miscellany)		{<drugclass_said miscellany_said>}
		(mouthwash)		{<drugclass_said mouthwash_said>}
		(mydriatic)		{<drugclass_said mydriatic_said>}
		(narcotic)		{<drugclass_said narcotic_said>}
		;(nervine)		{<drugclass_said nervine_said>}
		(nutritive)		{<drugclass_said nutritive_said>}
		;(odontalgic)		{<drugclass_said odontalgic_said>}
		(ophthalmic)		{<drugclass_said ophthalmic_said>}
		;(oxytoxic)		{<drugclass_said oxytoxic_said>}
		;(parasiticide)		{<drugclass_said parasiticide_said>}
		(pectoral)		{<drugclass_said pectoral_said>}
		(plaster)		{<drugclass_said plaster_said>}
		(poultice)		{<drugclass_said poultice_said>}
		(purgative)		{<drugclass_said purgative_said>}
		(refrigerant)		{<drugclass_said refrigerant_said>}
		(resolvent)		{<drugclass_said resolvent_said>}
		(restorative)		{<drugclass_said restorative_said>}
		(rubefacient)		{<drugclass_said rubefacient_said>}
		(salve)		{<drugclass_said salve_said>}
		(sedative)		{<drugclass_said sedative_said>}
		(sialagogue)		{<drugclass_said sialagogue_said>}
		(skin)		{<drugclass_said skin_said>}
		;(sternutatory)		{<drugclass_said sternutatory_said>}
		(stimulant)		{<drugclass_said stimulant_said>}
		(stings)		{<drugclass_said stings_said>}
		(stomachic)		{<drugclass_said stomachic_said>}
		(styptic)		{<drugclass_said styptic_said>}
		(tb)		{<drugclass_said tb_said>}
		(tonic)		{<drugclass_said tonic_said>}

		;(vasoconstrictor)		{<drugclass_said vasoconstrictor_said>}
		;(vasodilator)		{<drugclass_said vasodilator_said>}
		(vd)		{<drugclass_said vd_said>}
		(vermifuge)		{<drugclass_said vermifuge_said>}
		;(vesicant)		{<drugclass_said vesicant_said>}
		(vulnerary)		{<drugclass_said vulnerary_said>}
		(warts)		{<drugclass_said warts_said>}
	]
)